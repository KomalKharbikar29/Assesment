-- create table employee_information(employee_id int primary key, first_name varchar,	last_name varchar,	salary int,	hire_date date,
-- manager_id int, city varchar,state varchar,	country varchar);

-- create table sales_record(sale_id int primary key,	product_id int,	customer_id int,	sale_date date,	quantity int,	
-- unit_price real, discount real,	total_sale real, salesperson_id int, region varchar);

-- create table product_details(product_id int primary key,	product_name varchar,	category varchar,	price real,	stock_quantity int,	supplier_id int,
-- reorder_level int,	discontinued boolean,created_at date,	updated_at date);

-- create table customer_info(customer_id int primary key,	first_name varchar,	last_name varchar,	email varchar,	phone varchar,	address varchar,
-- city varchar, state	varchar, country varchar, account_creation_date date);

-- create table order_details(order_id int primary key, customer_id int,	order_date date, shipping_date date,	status varchar,	total_amount real,
-- payment_method varchar,	billing_address varchar, shipping_address varchar,	shipper_id int);

--FRESHER LEVEL

1-- select * from employee_information

2-- select * from customer_info where state = 'Nevada'

3-- select count(*) total_sales from sales_record

4-- select * from product_details where price > 100

5-- select first_name||' '||last_name employee_name, salary from employee_information

6-- insert into product_details (product_id, product_name, category, price, stock_quantity, supplier_id, reorder_level, 
 -- discontinued, created_at, updated_at) values (201, 'Laptop','Electronics', 750.45, 589, 25,150, 'true', '2021-10-16','2021-12-15')

7-- update order_details set status = 'completed' where order_id = 5

8-- delete from customer_info where customer_id = 2

--INTERMEDIATE LEVEL

9-- select salesperson_id, sum(total_sale) total_sales from sales_record group by salesperson_id

10-- select pd.product_name, sr.quantity from sales_record sr join product_details pd on sr.product_id = pd.product_id;

11--  select pd.product_name, sum(sr.total_sale) total_sales from sales_record sr join product_details pd
-- on sr.product_id = pd.product_id group by pd.product_name order by  total_sales desc limit 5

12--  select * from order_details where order_date > '2023-01-01'

15-- select pd.category, sum(sr.total_sale) total_revenue from sales_record sr join product_details pd
 -- select * from product_details where discontinued = 'true' and stock_quantity > 0

16-- select * from product_details where Discontinued = 'true'and stock_quantity > 0

--ADVANCE LEVEL

19-- select * from sales_record where discount > 0.15 order by  total_sale desc

23-- select * from product_details where product_id not in (select distinct product_id from sales_record)

25-- select salesperson_id, sum(total_sale) total_sales, rank() over(order by sum(total_sale) desc) rank_position from
--sales_record group by salesperson_id